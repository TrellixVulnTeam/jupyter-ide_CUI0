(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[5970],{95970:(e,t,n)=>{"use strict";n.r(t);n.d(t,{DefaultSchemaValidator:()=>m,ISettingRegistry:()=>b,SettingRegistry:()=>f,Settings:()=>g});var i=n(97745);var s=n(9727);var r=n(76487);var a=n(75138);var o=n(84778);var c=n.n(o);var u=n(96111);const d=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema","title":"JupyterLab Plugin Settings/Preferences Schema","description":"JupyterLab plugin settings/preferences schema","version":"1.0.0","type":"object","additionalProperties":true,"properties":{"jupyter.lab.internationalization":{"type":"object","properties":{"selectors":{"type":"array","items":{"type":"string","minLength":1}},"domain":{"type":"string","minLength":1}}},"jupyter.lab.menus":{"type":"object","properties":{"main":{"title":"Main menu entries","description":"List of menu items to add to the main menubar.","items":{"$ref":"#/definitions/menu"},"type":"array","default":[]},"context":{"title":"The application context menu.","description":"List of context menu items.","items":{"allOf":[{"$ref":"#/definitions/menuItem"},{"properties":{"selector":{"description":"The CSS selector for the context menu item.","type":"string"}}}]},"type":"array","default":[]}},"additionalProperties":false},"jupyter.lab.setting-deprecated":{"type":"boolean","default":false},"jupyter.lab.setting-icon":{"type":"string","default":""},"jupyter.lab.setting-icon-class":{"type":"string","default":""},"jupyter.lab.setting-icon-label":{"type":"string","default":"Plugin"},"jupyter.lab.shortcuts":{"items":{"$ref":"#/definitions/shortcut"},"type":"array","default":[]},"jupyter.lab.transform":{"type":"boolean","default":false}},"definitions":{"menu":{"properties":{"disabled":{"description":"Whether the menu is disabled or not","type":"boolean","default":false},"icon":{"description":"Menu icon id","type":"string"},"id":{"description":"Menu unique id","oneOf":[{"type":"string","enum":["jp-menu-file","jp-menu-file-new","jp-menu-edit","jp-menu-help","jp-menu-kernel","jp-menu-run","jp-menu-settings","jp-menu-view","jp-menu-tabs"]},{"type":"string","pattern":"[a-z][a-z0-9\\\\-_]+"}]},"items":{"description":"Menu items","type":"array","items":{"$ref":"#/definitions/menuItem"}},"label":{"description":"Menu label","type":"string"},"mnemonic":{"description":"Mnemonic index for the label","type":"number","minimum":-1,"default":-1},"rank":{"description":"Menu rank","type":"number","minimum":0}},"required":["id"],"type":"object"},"menuItem":{"properties":{"args":{"description":"Command arguments","type":"object"},"command":{"description":"Command id","type":"string"},"disabled":{"description":"Whether the item is disabled or not","type":"boolean","default":false},"type":{"description":"Item type","type":"string","enum":["command","submenu","separator"],"default":"command"},"rank":{"description":"Item rank","type":"number","minimum":0},"submenu":{"oneOf":[{"$ref":"#/definitions/menu"},{"type":"null"}]}},"type":"object"},"shortcut":{"properties":{"args":{"type":"object"},"command":{"type":"string"},"disabled":{"type":"boolean","default":false},"keys":{"items":{"type":"string"},"minItems":1,"type":"array"},"selector":{"type":"string"}},"required":["command","keys","selector"],"type":"object"}}}');const l=s.JSONExt.deepCopy;const h=1e3;const p=String.fromCharCode(30);class m{constructor(){this._composer=new(c())({useDefaults:true});this._validator=new(c());this._composer.addSchema(d,"jupyterlab-plugin-schema");this._validator.addSchema(d,"jupyterlab-plugin-schema")}validateData(e,t=true){const n=this._validator.getSchema(e.id);const i=this._composer.getSchema(e.id);if(!n||!i){if(e.schema.type!=="object"){const t="schema";const n=`Setting registry schemas' root-level type must be `+`'object', rejecting type: ${e.schema.type}`;return[{dataPath:"type",keyword:t,schemaPath:"",message:n}]}const t=this._addSchema(e.id,e.schema);return t||this.validateData(e)}let s;try{s=u.parse(e.raw)}catch(a){if(a instanceof SyntaxError){return[{dataPath:"",keyword:"syntax",schemaPath:"",message:a.message}]}const{column:e,description:t}=a;const n=a.lineNumber;return[{dataPath:"",keyword:"parse",schemaPath:"",message:`${t} (line ${n} column ${e})`}]}if(!n(s)){return n.errors}const r=l(s);if(!i(r)){return i.errors}if(t){e.data={composite:r,user:s}}return null}_addSchema(e,t){const n=this._composer;const i=this._validator;const s=i.getSchema("jupyterlab-plugin-schema");if(!s(t)){return s.errors}if(!i.validateSchema(t)){return i.errors}n.removeSchema(e);i.removeSchema(e);n.addSchema(t,e);i.addSchema(t,e);return null}}class f{constructor(e){this.schema=d;this.plugins=Object.create(null);this._pluginChanged=new a.Signal(this);this._ready=Promise.resolve();this._transformers=Object.create(null);this.connector=e.connector;this.validator=e.validator||new m;this._timeout=e.timeout||h;if(e.plugins){this._ready=this._preload(e.plugins)}}get pluginChanged(){return this._pluginChanged}async get(e,t){await this._ready;const n=this.plugins;if(e in n){const{composite:i,user:s}=n[e].data;return{composite:i[t]!==undefined?l(i[t]):undefined,user:s[t]!==undefined?l(s[t]):undefined}}return this.load(e).then((()=>this.get(e,t)))}async load(e){await this._ready;const t=this.plugins;const n=this;if(e in t){return new g({plugin:t[e],registry:n})}return this.reload(e)}async reload(e){await this._ready;const t=await this.connector.fetch(e);const n=this.plugins;const i=this;if(t===undefined){throw[{dataPath:"",keyword:"id",message:`Could not fetch settings for ${e}.`,schemaPath:""}]}await this._load(await this._transform("fetch",t));this._pluginChanged.emit(e);return new g({plugin:n[e],registry:i})}async remove(e,t){await this._ready;const n=this.plugins;if(!(e in n)){return}const i=u.parse(n[e].raw);delete i[t];delete i[`// ${t}`];n[e].raw=y.annotatedPlugin(n[e],i);return this._save(e)}async set(e,t,n){await this._ready;const i=this.plugins;if(!(e in i)){return this.load(e).then((()=>this.set(e,t,n)))}const s=u.parse(i[e].raw);i[e].raw=y.annotatedPlugin(i[e],Object.assign(Object.assign({},s),{[t]:n}));return this._save(e)}transform(e,t){const n=this._transformers;if(e in n){throw new Error(`${e} already has a transformer.`)}n[e]={fetch:t.fetch||(e=>e),compose:t.compose||(e=>e)};return new r.DisposableDelegate((()=>{delete n[e]}))}async upload(e,t){await this._ready;const n=this.plugins;if(!(e in n)){return this.load(e).then((()=>this.upload(e,t)))}n[e].raw=t;return this._save(e)}async _load(e){const t=e.id;try{await this._validate(e)}catch(n){const e=[`Validating ${t} failed:`];n.forEach(((t,n)=>{const{dataPath:i,schemaPath:s,keyword:r,message:a}=t;if(i||s){e.push(`${n} - schema @ ${s}, data @ ${i}`)}e.push(`{${r}} ${a}`)}));console.warn(e.join("\n"));throw n}}async _preload(e){await Promise.all(e.map((async e=>{var t;try{await this._load(await this._transform("fetch",e))}catch(n){if(((t=n[0])===null||t===void 0?void 0:t.keyword)!=="timeout"){console.warn("Ignored setting registry preload errors.",n)}}})))}async _save(e){const t=this.plugins;if(!(e in t)){throw new Error(`${e} does not exist in setting registry.`)}try{await this._validate(t[e])}catch(i){console.warn(`${e} validation errors:`,i);throw new Error(`${e} failed to validate; check console.`)}await this.connector.save(e,t[e].raw);const n=await this.connector.fetch(e);if(n===undefined){throw[{dataPath:"",keyword:"id",message:`Could not fetch settings for ${e}.`,schemaPath:""}]}await this._load(await this._transform("fetch",n));this._pluginChanged.emit(e)}async _transform(e,t,n=(new Date).getTime()){const i=(new Date).getTime()-n;const s=t.id;const r=this._transformers;const a=this._timeout;if(!t.schema["jupyter.lab.transform"]){return t}if(s in r){const n=r[s][e].call(null,t);if(n.id!==s){throw[{dataPath:"",keyword:"id",message:"Plugin transformations cannot change plugin IDs.",schemaPath:""}]}return n}if(i<a){await new Promise((e=>{setTimeout((()=>{e()}),250)}));return this._transform(e,t,n)}throw[{dataPath:"",keyword:"timeout",message:`Transforming ${t.id} timed out.`,schemaPath:""}]}async _validate(e){const t=this.validator.validateData(e);if(t){throw t}this.plugins[e.id]=await this._transform("compose",e)}}class g{constructor(e){this._changed=new a.Signal(this);this._isDisposed=false;this.id=e.plugin.id;this.registry=e.registry;this.registry.pluginChanged.connect(this._onPluginChanged,this)}get changed(){return this._changed}get composite(){return this.plugin.data.composite}get isDisposed(){return this._isDisposed}get plugin(){return this.registry.plugins[this.id]}get schema(){return this.plugin.schema}get raw(){return this.plugin.raw}get user(){return this.plugin.data.user}get version(){return this.plugin.version}annotatedDefaults(){return y.annotatedDefaults(this.schema,this.id)}default(e){return y.reifyDefault(this.schema,e)}dispose(){if(this._isDisposed){return}this._isDisposed=true;a.Signal.clearData(this)}get(e){const{composite:t,user:n}=this;return{composite:t[e]!==undefined?l(t[e]):undefined,user:n[e]!==undefined?l(n[e]):undefined}}remove(e){return this.registry.remove(this.plugin.id,e)}save(e){return this.registry.upload(this.plugin.id,e)}set(e,t){return this.registry.set(this.plugin.id,e,t)}validate(e){const t={composite:{},user:{}};const{id:n,schema:i}=this.plugin;const s=this.registry.validator;const r=this.version;return s.validateData({data:t,id:n,raw:e,schema:i,version:r},false)}_onPluginChanged(e,t){if(t===this.plugin.id){this._changed.emit(undefined)}}}(function(e){function t(e,t,i=false,r=true){if(!e){return t&&r?s.JSONExt.deepCopy(t):[]}if(!t){return s.JSONExt.deepCopy(e)}const a=s.JSONExt.deepCopy(e);t.forEach((e=>{const t=a.findIndex((t=>t.id===e.id));if(t>=0){a[t]=Object.assign(Object.assign(Object.assign({},a[t]),e),{items:n(a[t].items,e.items,i,r)})}else{if(r){a.push(e)}}}));return a}e.reconcileMenus=t;function n(e,n,i=false,r=true){if(!e){return n?s.JSONExt.deepCopy(n):undefined}if(!n){return s.JSONExt.deepCopy(e)}const a=s.JSONExt.deepCopy(e);n.forEach((e=>{var n;switch((n=e.type)!==null&&n!==void 0?n:"command"){case"separator":if(r){a.push(Object.assign({},e))}break;case"submenu":if(e.submenu){const n=a.findIndex((t=>{var n,i;return t.type==="submenu"&&((n=t.submenu)===null||n===void 0?void 0:n.id)===((i=e.submenu)===null||i===void 0?void 0:i.id)}));if(n<0){if(r){a.push(s.JSONExt.deepCopy(e))}}else{a[n]=Object.assign(Object.assign(Object.assign({},a[n]),e),{submenu:t(a[n].submenu?[a[n].submenu]:null,[e.submenu],i,r)[0]})}}break;case"command":if(e.command){const t=a.findIndex((t=>{var n,i;return t.command===e.command&&t.selector===e.selector&&s.JSONExt.deepEqual((n=t.args)!==null&&n!==void 0?n:{},(i=e.args)!==null&&i!==void 0?i:{})}));if(t<0){if(r){a.push(Object.assign({},e))}}else{if(i){console.warn(`Menu entry for command '${e.command}' is duplicated.`)}a[t]=Object.assign(Object.assign({},a[t]),e)}}}}));return a}e.reconcileItems=n;function r(e){return e.reduce(((e,t)=>{var n;const i=Object.assign({},t);if(!i.disabled){if(i.type==="submenu"){const{submenu:e}=i;if(e&&!e.disabled){i.submenu=Object.assign(Object.assign({},e),{items:r((n=e.items)!==null&&n!==void 0?n:[])})}}e.push(i)}return e}),[])}e.filterDisabledItems=r;function a(e,t){const n={};t=t.filter((e=>{const t=i.CommandRegistry.normalizeKeys(e).join(p);if(!t){console.warn("Skipping this shortcut because there are no actionable keys on this platform",e);return false}if(!(t in n)){n[t]={}}const{selector:s}=e;if(!(s in n[t])){n[t][s]=false;return true}console.warn("Skipping this shortcut because it collides with another shortcut.",e);return false}));e=[...e.filter((e=>!!e.disabled)),...e.filter((e=>!e.disabled))].filter((e=>{const t=i.CommandRegistry.normalizeKeys(e).join(p);if(!t){return false}if(!(t in n)){n[t]={}}const{disabled:s,selector:r}=e;if(!(r in n[t])){n[t][r]=!s;return true}if(n[t][r]){console.warn("Skipping this default shortcut because it collides with another default shortcut.",e)}return false}));return t.concat(e).filter((e=>!e.disabled))}e.reconcileShortcuts=a})(f||(f={}));var y;(function(e){const t="    ";const n="[missing schema description]";const i="[missing schema title]";function r(e,t){const{description:s,properties:r,title:a}=e;const c=r?Object.keys(r).sort(((e,t)=>e.localeCompare(t))):[];const l=Math.max((s||n).length,t.length);return["{",d(`${a||i}`),d(t),d(s||n),d("*".repeat(l)),"",u(c.map((t=>o(e,t)))),"}"].join("\n")}e.annotatedDefaults=r;function a(e,t){const{description:s,title:r}=e.schema;const a=Object.keys(t).sort(((e,t)=>e.localeCompare(t)));const o=Math.max((s||n).length,e.id.length);return["{",d(`${r||i}`),d(e.id),d(s||n),d("*".repeat(o)),"",u(a.map((n=>c(e.schema,n,t[n])))),"}"].join("\n")}e.annotatedPlugin=a;function o(e,i){const s=e.properties&&e.properties[i]||{};const r=s["type"];const a=s["description"]||n;const o=s["title"]||"";const c=l(e,i);const u=t.length;const h=c!==undefined?d(`"${i}": ${JSON.stringify(c,null,u)}`,t):d(`"${i}": ${r}`);return[d(o),d(a),h].filter((e=>e.length)).join("\n")}function c(e,s,r){const a=e.properties&&e.properties[s];const o=a&&a["description"]||n;const c=a&&a["title"]||i;const u=t.length;const l=d(`"${s}": ${JSON.stringify(r,null,u)}`,t);return[d(c),d(o),l].join("\n")}function u(e){return e.reduce(((t,n,i)=>{const s=n.split("\n");const r=s[s.length-1];const a=r.trim().indexOf("//")===0;const o=a||i===e.length-1?"":",";const c=i===e.length-1?"":"\n\n";return t+n+o+c}),"")}function d(e,n=`${t}// `){return n+e.split("\n").join(`\n${n}`)}function l(e,t){var n;e=(t?(n=e.properties)===null||n===void 0?void 0:n[t]:e)||{};if(!("default"in e)||e.type!=="object"){return e.default}const i=s.JSONExt.deepCopy(e.default);const r=e.properties||{};for(const s in r){i[s]=l(r[s])}return i}e.reifyDefault=l})(y||(y={}));const b=new s.Token("@jupyterlab/coreutils:ISettingRegistry")}}]);