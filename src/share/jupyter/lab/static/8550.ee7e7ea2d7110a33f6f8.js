(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[8550,6252],{98550:(e,t,n)=>{"use strict";n.r(t);n.d(t,{STATUSBAR_PLUGIN_ID:()=>y,kernelStatus:()=>j,lineColItem:()=>w,runningSessionsItem:()=>x,default:()=>V});var a=n(20650);var s=n.n(a);var o=n(26825);var r=n.n(o);var i=n(49069);var l=n.n(i);var c=n(1166);var u=n.n(c);var d=n(3860);var m=n.n(d);var g=n(68992);var p=n.n(g);var b=n(10314);var v=n.n(b);var h=n(1612);var I=n.n(h);var S=n(92481);var C=n.n(S);var f=n(97745);var k=n.n(f);const y="@jupyterlab/statusbar-extension:plugin";const _={id:y,requires:[h.ITranslator],provides:b.IStatusBar,autoStart:true,activate:(e,t,n,a,s)=>{const o=t.load("jupyterlab");const r=new b.StatusBar;r.id="jp-main-statusbar";e.shell.add(r,"bottom");if(n){n.layoutModified.connect((()=>{r.update()}))}const i=o.__("Main Area");const l="statusbar:toggle";e.commands.addCommand(l,{label:o.__("Show Status Bar"),execute:e=>{r.setHidden(r.isVisible);if(a){void a.set(y,"visible",r.isVisible)}},isToggled:()=>r.isVisible});if(s){s.addItem({command:l,category:i})}if(a){const t=a.load(y);const n=e=>{const t=e.get("visible").composite;r.setHidden(!t)};Promise.all([t,e.restored]).then((([e])=>{n(e);e.changed.connect((e=>{n(e)}))})).catch((e=>{console.error(e.message)}))}return r},optional:[a.ILabShell,g.ISettingRegistry,o.ICommandPalette]};const j={id:"@jupyterlab/statusbar-extension:kernel-status",autoStart:true,requires:[b.IStatusBar,d.INotebookTracker,i.IConsoleTracker,a.ILabShell,h.ITranslator],optional:[o.ISessionContextDialogs],activate:(e,t,n,a,s,r,i)=>{let l=null;const c=async()=>{if(!l){return}await(i||o.sessionContextDialogs).selectKernel(l,r)};const u=new b.KernelStatus({onClick:c},r);const d=e=>{u.model.activityName=e.label};s.currentChanged.connect(((e,t)=>{const{oldValue:s,newValue:o}=t;if(s){s.title.changed.disconnect(d)}if(o){o.title.changed.connect(d)}if(o&&a.has(o)){l=o.sessionContext}else if(o&&n.has(o)){l=o.sessionContext}else{l=null}u.model.sessionContext=l}));t.registerStatusItem("@jupyterlab/statusbar-extension:kernel-status",{item:u,align:"left",rank:1,isActive:()=>{const e=s.currentWidget;return!!e&&(n.has(e)||a.has(e))}})}};const w={id:"@jupyterlab/statusbar-extension:line-col-status",autoStart:true,requires:[b.IStatusBar,d.INotebookTracker,c.IEditorTracker,i.IConsoleTracker,a.ILabShell,h.ITranslator],activate:(e,t,n,a,s,o,r)=>{const i=new b.LineCol(r);const l=(e,t)=>{i.model.editor=t&&t.editor};const c=(e,t)=>{i.model.editor=t&&t.editor};o.currentChanged.connect(((e,t)=>{const{oldValue:o,newValue:r}=t;if(o&&s.has(o)){o.console.promptCellCreated.disconnect(c)}else if(o&&n.has(o)){o.content.activeCellChanged.disconnect(l)}if(r&&s.has(r)){r.console.promptCellCreated.connect(c);const e=r.console.promptCell;i.model.editor=e&&e.editor}else if(r&&n.has(r)){r.content.activeCellChanged.connect(l);const e=r.content.activeCell;i.model.editor=e&&e.editor}else if(r&&a.has(r)){i.model.editor=r.content.editor}else{i.model.editor=null}}));t.registerStatusItem("@jupyterlab/statusbar-extension:line-col-status",{item:i,align:"right",rank:2,isActive:()=>{const e=o.currentWidget;return!!e&&(n.has(e)||a.has(e)||s.has(e))}})}};const x={id:"@jupyterlab/statusbar-extension:running-sessions-status",autoStart:true,requires:[b.IStatusBar,h.ITranslator],activate:(e,t,n)=>{const a=new b.RunningSessions({onClick:()=>e.shell.activateById("jp-running-sessions"),serviceManager:e.serviceManager,translator:n});t.registerStatusItem("@jupyterlab/statusbar-extension:running-sessions-status",{item:a,align:"left",rank:0})}};const T={id:"@jupyterlab/statusbar-extension:mode-switch",requires:[a.ILabShell,h.ITranslator,b.IStatusBar],activate:(e,t,n,a)=>{const s=n.load("jupyterlab");const o=new S.Switch;o.id="jp-single-document-mode";o.valueChanged.connect(((e,n)=>{t.mode=n.newValue?"single-document":"multiple-document"}));t.modeChanged.connect(((e,t)=>{o.value=t==="single-document"}));o.value=t.mode==="single-document";const r=()=>{const t=e.commands.keyBindings.find((e=>e.command==="application:toggle-mode"));if(t){const e=f.CommandRegistry.formatKeystroke(t.keys.join(" "));o.caption=s.__("Simple Interface (%1)",e)}else{o.caption=s.__("Simple Interface")}};r();e.commands.keyBindingChanged.connect((()=>{r()}));o.label=s.__("Simple");a.registerStatusItem("@jupyterlab/statusbar-extension:mode-switch",{item:o,align:"left",rank:-1})},autoStart:true};const B=[_,w,j,x,T];const V=B}}]);